const urlUF = 'https://servicodados.ibge.gov.br/api/v1/localidades/estados';
const ufSelect = document.getElementById("uf");
const cidadeSelect = document.getElementById("municipio");

async function carregarCidades(uf) {
  const urlCidades = `https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`;

  try {
    const request = await fetch(urlCidades);
    const response = await request.json();

    let options = "";
    response.forEach(function(cidade) {
      options += `<option value="${cidade.nome}" title="${cidade.nome}">${cidade.nome}</option>`;
    });
    cidadeSelect.innerHTML = options;
  } catch (error) {
    console.error(error);
  }
}

function criarOpcoesUFs(select) {
  const options = document.createElement("optgroup");
  options.setAttribute('label', 'UFs');

  select.append(options);

  fetch(urlUF)
    .then(response => response.json())
    .then(response => {
      response.forEach(function(uf) {
        const option = document.createElement("option");
        option.value = uf.sigla;
        option.innerHTML = uf.sigla;
        options.appendChild(option);
      });

      ufSelect.addEventListener('change', function() {
        carregarCidades(this.value);
      });
    })
    .catch(error => {
      console.error(error);
    });
}

criarOpcoesUFs(ufSelect);

function formatPhoneNumber(phoneNumberString) {
  const pattern = /\D/g;
  const cleaned = phoneNumberString.replace(pattern, '');

  const ddd = cleaned.substring(0, 2);
  const firstPart = cleaned.substring(2, 7);
  const secondPart = cleaned.substring(7);

  let formattedNumber = '';

  if (ddd) {
    formattedNumber += `(${ddd}) `;
  }

  if (firstPart) {
    formattedNumber += `${firstPart}-`;
  }

  if (secondPart) {
    formattedNumber += `${secondPart}`;
  }

  return formattedNumber;
}

function formatNumberOnly(inputString) {
  return inputString.replace(/\D/g, '');
}

function formatCEP(cepString) {
  const pattern = /\D/g;
  const cleaned = cepString.replace(pattern, '');

  const firstPart = cleaned.substring(0, 5);
  const secondPart = cleaned.substring(5);

  let formattedCEP = '';

  if (firstPart) {
    formattedCEP += `${firstPart}-`;
  }

  if (secondPart) {
    formattedCEP += `${secondPart}`;
  }

  return formattedCEP;
}